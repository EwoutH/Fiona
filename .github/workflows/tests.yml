name: Tests

on:
  push:
  pull_request:
    branches: [ master, 'maint-*' ]
    paths:
      - '.github/workflows/tests.yaml'
      - 'requirements*.txt'
      - 'setup.py'
      - 'setup.cfg'
      - 'MANIFEST.in'
      - 'pyproject.toml'
      - 'scripts/**'
      - 'fiona/**'
      - 'tests/**'
  schedule:
    - cron:  '0 0 * * 0'

jobs:
  docker_tests:
    runs-on: ubuntu-latest
    name: Docker | GDAL=${{ matrix.gdal-version }} | python=${{ matrix.python-version }}
    container: ghcr.io/osgeo/gdal:ubuntu-small-${{ matrix.gdal-version }}
    env:
        DEBIAN_FRONTEND: noninteractive
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: '3.11'
            gdal-version: '3.7.2'
          - python-version: '3.12'
            gdal-version: '3.7.2'

    steps:
      - uses: actions/checkout@v4

      - name: Update
        run: |
          apt-get update
          apt-get -y install software-properties-common
          add-apt-repository -y ppa:deadsnakes/ppa
          apt-get update

      - name: Set up Python ${{ matrix.python-version }}
        run: |
          apt-get install -y --no-install-recommends \
            python${{ matrix.python-version }} \
            python${{ matrix.python-version }}-dev \
            python${{ matrix.python-version }}-venv \
            python3-pip \
            g++

      - name: Install dependencies
        run: |
          python${{ matrix.python-version }} -m venv testenv
          . testenv/bin/activate
          python -m pip install --upgrade pip setuptools
          python -m pip wheel -r requirements-dev.txt
          python -m pip install -r requirements-dev.txt
          python setup.py clean
          python -m pip install --no-deps --force-reinstall -e .[test]

      - name: Run tests
        run: |
          . testenv/bin/activate
          python -m pytest -v -m "not wheel or gdal" -rxXs --cov fiona --cov-report term-missing

